Elm.Css = Elm.Css || {};
Elm.Css.Flex = Elm.Css.Flex || {};
Elm.Css.Flex.make = function (_elm) {
   "use strict";
   _elm.Css = _elm.Css || {};
   _elm.Css.Flex = _elm.Css.Flex || {};
   if (_elm.Css.Flex.values) return _elm.Css.Flex.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Css = Elm.Css.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Vendor = Elm.Vendor.make(_elm);
   var _op = {};
   var basis = F2(function (b,styles) {
      var name = "flex-basis";
      var prefix = $Vendor.prefix;
      return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),$Css.px(b),styles) : _U.eq(prefix,$Vendor.MS) ? A3($Css.style,
      "-ms-flex-preferred-size",
      $Css.px(b),
      styles) : A3($Css.style,name,$Css.px(b),styles);
   });
   var shrink = F2(function (s,styles) {
      var name = "flex-shrink";
      var prefix = $Vendor.prefix;
      return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),$Basics.toString(s),styles) : _U.eq(prefix,
      $Vendor.MS) ? A3($Css.style,"-ms-flex-negative",$Basics.toString(s),styles) : A3($Css.style,name,$Basics.toString(s),styles);
   });
   var grow = F2(function (g,styles) {
      var name = "flex-grow";
      var prefix = $Vendor.prefix;
      return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),$Basics.toString(g),styles) : _U.eq(prefix,
      $Vendor.MS) ? A3($Css.style,"-ms-flex-positive",$Basics.toString(g),styles) : A3($Css.style,name,$Basics.toString(g),styles);
   });
   var order = F2(function (o,styles) {
      var name = "order";
      var prefix = $Vendor.prefix;
      return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),$Basics.toString(o),styles) : _U.eq(prefix,
      $Vendor.MS) ? A3($Css.style,"-ms-flex-order",$Basics.toString(o),styles) : A3($Css.style,name,$Basics.toString(o),styles);
   });
   var justifyContent = F2(function (j,styles) {
      var name = "justify-content";
      var prefix = $Vendor.prefix;
      var _p0 = j;
      switch (_p0.ctor)
      {case "JCStart": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"flex-start",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-pack","start",styles) : A3($Css.style,name,"flex-start",styles);
         case "JCEnd": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"flex-end",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-pack","end",styles) : A3($Css.style,name,"flex-end",styles);
         case "JCCenter": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"center",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-pack","center",styles) : A3($Css.style,name,"center",styles);
         case "JCBetween": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"space-between",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-pack","justify",styles) : A3($Css.style,name,"space-between",styles);
         default: return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"space-around",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-pack","distribute",styles) : A3($Css.style,name,"space-around",styles);}
   });
   var direction = F2(function (d,styles) {
      var name = "flex-direction";
      var prefix = $Vendor.prefix;
      var _p1 = d;
      switch (_p1.ctor)
      {case "Row": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"row",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,A2($Basics._op["++"],"-ms-",name),"row",styles) : A3($Css.style,name,"row",styles);
         case "RowReverse": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"row-reverse",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,A2($Basics._op["++"],"-ms-",name),"row-reverse",styles) : A3($Css.style,name,"row-reverse",styles);
         case "Column": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"column",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,A2($Basics._op["++"],"-ms-",name),"column",styles) : A3($Css.style,name,"column",styles);
         default: return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"column-reverse",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,A2($Basics._op["++"],"-ms-",name),"column-reverse",styles) : A3($Css.style,name,"column-reverse",styles);}
   });
   var alignContentString = function (align) {
      var _p2 = align;
      switch (_p2.ctor)
      {case "ACStart": return "flex-start";
         case "ACEnd": return "flex-end";
         case "ACCenter": return "center";
         case "ACStretch": return "stretch";
         case "ACBetween": return "space-between";
         default: return "space-around";}
   };
   var alignContent = F2(function (a,styles) {
      var name = "align-content";
      var prefix = $Vendor.prefix;
      var _p3 = a;
      switch (_p3.ctor)
      {case "ACStart": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"flex-start",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-line-pack","start",styles) : A3($Css.style,name,"flex-start",styles);
         case "ACEnd": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"flex-end",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-line-pack","end",styles) : A3($Css.style,name,"flex-end",styles);
         case "ACBetween": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"space-between",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-line-pack","justify",styles) : A3($Css.style,name,"space-between",styles);
         case "ACAround": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"space-around",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-line-pack","distribute",styles) : A3($Css.style,name,"space-around",styles);
         default: return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),alignContentString(a),styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-line-pack",alignContentString(a),styles) : A3($Css.style,name,alignContentString(a),styles);}
   });
   var alignItemString = function (align) {
      var _p4 = align;
      switch (_p4.ctor)
      {case "AIStart": return "flex-start";
         case "AIEnd": return "flex-end";
         case "AICenter": return "center";
         case "AIStretch": return "stretch";
         default: return "baseline";}
   };
   var alignItems = F2(function (a,styles) {
      var prefix = $Vendor.prefix;
      var _p5 = a;
      switch (_p5.ctor)
      {case "AIStart": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,"-webkit-align-items","flex-start",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-align","start",styles) : A3($Css.style,"align-items",alignItemString(a),styles);
         case "AIEnd": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,"-webkit-align-items","flex-end",styles) : _U.eq(prefix,$Vendor.MS) ? A3($Css.style,
           "-ms-flex-align",
           "end",
           styles) : A3($Css.style,"align-items",alignItemString(a),styles);
         default: return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,"-webkit-align-items",alignItemString(a),styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-align",alignItemString(a),styles) : A3($Css.style,"align-items",alignItemString(a),styles);}
   });
   var alignSelf = F2(function (a,styles) {
      var name = "align-self";
      var prefix = $Vendor.prefix;
      var _p6 = a;
      switch (_p6.ctor)
      {case "AIStart": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"flex-start",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-item-align","start",styles) : A3($Css.style,name,"flex-start",styles);
         case "AIEnd": return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),"flex-end",styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-item-align","end",styles) : A3($Css.style,name,"flex-end",styles);
         default: return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),alignItemString(a),styles) : _U.eq(prefix,
           $Vendor.MS) ? A3($Css.style,"-ms-flex-item-align",alignItemString(a),styles) : A3($Css.style,name,alignItemString(a),styles);}
   });
   var justifyContentString = function (justify) {
      var _p7 = justify;
      switch (_p7.ctor)
      {case "JCStart": return "flex-start";
         case "JCEnd": return "flex-end";
         case "JCCenter": return "center";
         case "JCBetween": return "space-between";
         default: return "space-around";}
   };
   var wrapString = function (wrap) {
      var _p8 = wrap;
      switch (_p8.ctor)
      {case "NoWrap": return "nowrap";
         case "Wrap": return "wrap";
         default: return "wrap-reverse";}
   };
   var wrap = F2(function (w,styles) {
      var name = "flex-wrap";
      var prefix = $Vendor.prefix;
      return _U.eq(prefix,$Vendor.Webkit) ? A3($Css.style,A2($Basics._op["++"],"-webkit-",name),wrapString(w),styles) : _U.eq(prefix,
      $Vendor.MS) ? A3($Css.style,A2($Basics._op["++"],"-ms-",name),wrapString(w),styles) : A3($Css.style,name,wrapString(w),styles);
   });
   var flow = F3(function (d,w,styles) {    return A2(wrap,w,A2(direction,d,styles));});
   var directionString = function (direction) {
      var _p9 = direction;
      switch (_p9.ctor)
      {case "Row": return "row";
         case "RowReverse": return "row-reverse";
         case "Column": return "column";
         default: return "column-reverse";}
   };
   var ACAround = {ctor: "ACAround"};
   var ACBetween = {ctor: "ACBetween"};
   var ACStretch = {ctor: "ACStretch"};
   var ACCenter = {ctor: "ACCenter"};
   var ACEnd = {ctor: "ACEnd"};
   var ACStart = {ctor: "ACStart"};
   var AIBaseline = {ctor: "AIBaseline"};
   var AIStretch = {ctor: "AIStretch"};
   var AICenter = {ctor: "AICenter"};
   var AIEnd = {ctor: "AIEnd"};
   var AIStart = {ctor: "AIStart"};
   var JCAround = {ctor: "JCAround"};
   var JCBetween = {ctor: "JCBetween"};
   var JCCenter = {ctor: "JCCenter"};
   var JCEnd = {ctor: "JCEnd"};
   var JCStart = {ctor: "JCStart"};
   var WrapReverse = {ctor: "WrapReverse"};
   var Wrap = {ctor: "Wrap"};
   var NoWrap = {ctor: "NoWrap"};
   var ColumnReverse = {ctor: "ColumnReverse"};
   var Column = {ctor: "Column"};
   var RowReverse = {ctor: "RowReverse"};
   var Row = {ctor: "Row"};
   return _elm.Css.Flex.values = {_op: _op
                                 ,Row: Row
                                 ,RowReverse: RowReverse
                                 ,Column: Column
                                 ,ColumnReverse: ColumnReverse
                                 ,NoWrap: NoWrap
                                 ,Wrap: Wrap
                                 ,WrapReverse: WrapReverse
                                 ,JCStart: JCStart
                                 ,JCEnd: JCEnd
                                 ,JCCenter: JCCenter
                                 ,JCBetween: JCBetween
                                 ,JCAround: JCAround
                                 ,AIStart: AIStart
                                 ,AIEnd: AIEnd
                                 ,AICenter: AICenter
                                 ,AIStretch: AIStretch
                                 ,AIBaseline: AIBaseline
                                 ,ACStart: ACStart
                                 ,ACEnd: ACEnd
                                 ,ACCenter: ACCenter
                                 ,ACStretch: ACStretch
                                 ,ACBetween: ACBetween
                                 ,ACAround: ACAround
                                 ,directionString: directionString
                                 ,wrapString: wrapString
                                 ,justifyContentString: justifyContentString
                                 ,alignItemString: alignItemString
                                 ,alignContentString: alignContentString
                                 ,direction: direction
                                 ,wrap: wrap
                                 ,flow: flow
                                 ,justifyContent: justifyContent
                                 ,alignItems: alignItems
                                 ,alignContent: alignContent
                                 ,order: order
                                 ,grow: grow
                                 ,shrink: shrink
                                 ,basis: basis
                                 ,alignSelf: alignSelf};
};