Elm.Css = Elm.Css || {};
Elm.Css.ListStyle = Elm.Css.ListStyle || {};
Elm.Css.ListStyle.make = function (_elm) {
   "use strict";
   _elm.Css = _elm.Css || {};
   _elm.Css.ListStyle = _elm.Css.ListStyle || {};
   if (_elm.Css.ListStyle.values) return _elm.Css.ListStyle.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Css = Elm.Css.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var image = F2(function (path,styles) {    return A3($Css.style,"list-style-image",$Css.url(path),styles);});
   var bulletTypeString = function (t) {
      var _p0 = t;
      switch (_p0.ctor)
      {case "Disc": return "disc";
         case "Armenian": return "armenian";
         case "Circle": return "circle";
         case "CjkIdeographic": return "cjk-ideographic";
         case "Decimal": return "decimal";
         case "DecimalLeadingZero": return "decimal-leading-zero";
         case "Georgian": return "georgian";
         case "Hebrew": return "hebrew";
         case "Hiragana": return "hiragana";
         case "HiraganaIroha": return "hiragana-iroha";
         case "Katakana": return "katakana";
         case "KatakanaIroha": return "katakana-iroha";
         case "LowerAlpha": return "lower-alpha";
         case "LowerGreek": return "lower-greek";
         case "LowerLatin": return "lower-latin";
         case "LowerRoman": return "lower-roman";
         case "None": return "none";
         case "Square": return "square";
         case "UpperAlpha": return "upper-alpha";
         case "UpperLatin": return "upper-latin";
         default: return "upper-roman";}
   };
   var bulletType = F2(function (t,styles) {    return A3($Css.style,"list-style-type",bulletTypeString(t),styles);});
   var positionString = function (position) {    var _p1 = position;if (_p1.ctor === "Inside") {    return "inside";} else {    return "outside";}};
   var position = F2(function (p,styles) {    return A3($Css.style,"list-style-position",positionString(p),styles);});
   var UpperRoman = {ctor: "UpperRoman"};
   var UpperLatin = {ctor: "UpperLatin"};
   var UpperAlpha = {ctor: "UpperAlpha"};
   var Square = {ctor: "Square"};
   var None = {ctor: "None"};
   var LowerRoman = {ctor: "LowerRoman"};
   var LowerLatin = {ctor: "LowerLatin"};
   var LowerGreek = {ctor: "LowerGreek"};
   var LowerAlpha = {ctor: "LowerAlpha"};
   var KatakanaIroha = {ctor: "KatakanaIroha"};
   var Katakana = {ctor: "Katakana"};
   var HiraganaIroha = {ctor: "HiraganaIroha"};
   var Hiragana = {ctor: "Hiragana"};
   var Hebrew = {ctor: "Hebrew"};
   var Georgian = {ctor: "Georgian"};
   var DecimalLeadingZero = {ctor: "DecimalLeadingZero"};
   var Decimal = {ctor: "Decimal"};
   var CjkIdeographic = {ctor: "CjkIdeographic"};
   var Circle = {ctor: "Circle"};
   var Armenian = {ctor: "Armenian"};
   var Disc = {ctor: "Disc"};
   var Outside = {ctor: "Outside"};
   var Inside = {ctor: "Inside"};
   return _elm.Css.ListStyle.values = {_op: _op
                                      ,Inside: Inside
                                      ,Outside: Outside
                                      ,Disc: Disc
                                      ,Armenian: Armenian
                                      ,Circle: Circle
                                      ,CjkIdeographic: CjkIdeographic
                                      ,Decimal: Decimal
                                      ,DecimalLeadingZero: DecimalLeadingZero
                                      ,Georgian: Georgian
                                      ,Hebrew: Hebrew
                                      ,Hiragana: Hiragana
                                      ,HiraganaIroha: HiraganaIroha
                                      ,Katakana: Katakana
                                      ,KatakanaIroha: KatakanaIroha
                                      ,LowerAlpha: LowerAlpha
                                      ,LowerGreek: LowerGreek
                                      ,LowerLatin: LowerLatin
                                      ,LowerRoman: LowerRoman
                                      ,None: None
                                      ,Square: Square
                                      ,UpperAlpha: UpperAlpha
                                      ,UpperLatin: UpperLatin
                                      ,UpperRoman: UpperRoman
                                      ,positionString: positionString
                                      ,bulletTypeString: bulletTypeString
                                      ,image: image
                                      ,position: position
                                      ,bulletType: bulletType};
};