Elm.Css = Elm.Css || {};
Elm.Css.Outline = Elm.Css.Outline || {};
Elm.Css.Outline.make = function (_elm) {
   "use strict";
   _elm.Css = _elm.Css || {};
   _elm.Css.Outline = _elm.Css.Outline || {};
   if (_elm.Css.Outline.values) return _elm.Css.Outline.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Css = Elm.Css.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var width = F2(function (w,styles) {    return A3($Css.style,"outline-width",$Css.px(w),styles);});
   var color = F2(function (c,styles) {    return A3($Css.style,"outline-color",$Css.colorString(c),styles);});
   var styleString = function (style) {
      var _p0 = style;
      switch (_p0.ctor)
      {case "None": return "none";
         case "Hidden": return "hidden";
         case "Dotted": return "dotted";
         case "Dashed": return "dashed";
         case "Solid": return "solid";
         case "Double": return "double";
         case "Groove": return "groove";
         case "Ridge": return "ridge";
         case "Inset": return "inset";
         default: return "outset";}
   };
   var style = F2(function (s,styles) {    return A3($Css.style,"outline-style",styleString(s),styles);});
   var all = F4(function (c,s,w,styles) {    return A2(width,w,A2(style,s,A2(color,c,styles)));});
   var Outset = {ctor: "Outset"};
   var Inset = {ctor: "Inset"};
   var Ridge = {ctor: "Ridge"};
   var Groove = {ctor: "Groove"};
   var Double = {ctor: "Double"};
   var Solid = {ctor: "Solid"};
   var Dashed = {ctor: "Dashed"};
   var Dotted = {ctor: "Dotted"};
   var Hidden = {ctor: "Hidden"};
   var None = {ctor: "None"};
   return _elm.Css.Outline.values = {_op: _op
                                    ,None: None
                                    ,Hidden: Hidden
                                    ,Dotted: Dotted
                                    ,Dashed: Dashed
                                    ,Solid: Solid
                                    ,Double: Double
                                    ,Groove: Groove
                                    ,Ridge: Ridge
                                    ,Inset: Inset
                                    ,Outset: Outset
                                    ,styleString: styleString
                                    ,color: color
                                    ,style: style
                                    ,width: width
                                    ,all: all};
};