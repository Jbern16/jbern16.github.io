Elm.Jbern16 = Elm.Jbern16 || {};
Elm.Jbern16.make = function (_elm) {
   "use strict";
   _elm.Jbern16 = _elm.Jbern16 || {};
   if (_elm.Jbern16.values) return _elm.Jbern16.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var footer = function () {
      var source = "https://github.com/Jbern16/jbern16.github.io";
      var linkStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "color",_1: "#45503B"}
                                                     ,{ctor: "_Tuple2",_0: "font-size",_1: "14px"}
                                                     ,{ctor: "_Tuple2",_0: "position",_1: "relative"}
                                                     ,{ctor: "_Tuple2",_0: "top",_1: "30%"}]));
      var style$ = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "position",_1: "fixed"}
                                                  ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}
                                                  ,{ctor: "_Tuple2",_0: "background-color",_1: "#E9F1F7"}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "100px"}
                                                  ,{ctor: "_Tuple2",_0: "width",_1: "100%"}
                                                  ,{ctor: "_Tuple2",_0: "bottom",_1: "0%"}
                                                  ,{ctor: "_Tuple2",_0: "font-family",_1: "Karla, sans-serif"}]));
      return A2($Html.div,
      _U.list([style$]),
      _U.list([A2($Html.a,_U.list([linkStyle,$Html$Attributes.href(source)]),_U.list([$Html.text("Made with Elm. Hosted with love")]))]));
   }();
   var getLink = F2(function (content,index) {    return A2($Maybe.withDefault,"",A2($Array.get,index,content));});
   var headlineStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "48px"}
                                                      ,{ctor: "_Tuple2",_0: "font-family",_1: "Montserrat, sans-serif"}]));
   var sepStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "32px"}]));
   var findSep = function (headline) {
      return _U.eq(headline,"Contact Me") ? A2($Html.span,_U.list([sepStyle]),_U.list([$Html.text(" ° ")])) : _U.eq(headline,"My Work") ? A2($Html.span,
      _U.list([sepStyle]),
      _U.list([$Html.text(" ° ° ")])) : A2($Html.span,_U.list([sepStyle]),_U.list([$Html.text(" ° ° ° ")]));
   };
   var iconStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "padding",_1: "10px"},{ctor: "_Tuple2",_0: "color",_1: "white"}]));
   var findContent = function (model) {
      if (_U.eq(model.headline,"Contact Me")) {
            var links = $Array.fromList(A2($String.split,",",model.content));
            var email = A2(getLink,links,0);
            var twitter = A2(getLink,links,1);
            var linkedIn = A2(getLink,links,2);
            var angel = A2(getLink,links,3);
            return A2($Html.div,
            _U.list([]),
            _U.list([A2($Html.a,
                    _U.list([iconStyle,$Html$Attributes.href(email)]),
                    _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-envelope fa-3x")]),_U.list([]))]))
                    ,A2($Html.a,
                    _U.list([iconStyle,$Html$Attributes.href(twitter)]),
                    _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-twitter-square fa-3x")]),_U.list([]))]))
                    ,A2($Html.a,
                    _U.list([iconStyle,$Html$Attributes.href(linkedIn)]),
                    _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-linkedin-square fa-3x")]),_U.list([]))]))
                    ,A2($Html.a,
                    _U.list([iconStyle,$Html$Attributes.href(angel)]),
                    _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-angellist fa-3x")]),_U.list([]))]))]));
         } else if (_U.eq(model.headline,"My Work")) {
               var links = $Array.fromList(A2($String.split,",",model.content));
               var github = A2(getLink,links,0);
               var medium = A2(getLink,links,1);
               return A2($Html.div,
               _U.list([]),
               _U.list([A2($Html.a,
                       _U.list([iconStyle,$Html$Attributes.href(github)]),
                       _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-github-square fa-3x")]),_U.list([]))]))
                       ,A2($Html.a,
                       _U.list([iconStyle,$Html$Attributes.href(medium)]),
                       _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-medium fa-3x")]),_U.list([]))]))]));
            } else return A2($Html.div,
            _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "24px"}]))]),
            _U.list([$Html.text(model.content)]));
   };
   var border = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "border-style",_1: "solid"}
                                               ,{ctor: "_Tuple2",_0: "border-width",_1: "4px"}
                                               ,{ctor: "_Tuple2",_0: "border-color",_1: "#E9F1F7"}
                                               ,{ctor: "_Tuple2",_0: "paddingTop",_1: "30px"}
                                               ,{ctor: "_Tuple2",_0: "paddingBottom",_1: "10px"}
                                               ,{ctor: "_Tuple2",_0: "border-radius",_1: "3px"}
                                               ,{ctor: "_Tuple2",_0: "box-shadow",_1: "0 2px 2px 0 #888, 0 2px 2px 0 #888"}]));
   var textContainer = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "paddingTop",_1: "13%"}
                                                      ,{ctor: "_Tuple2",_0: "paddingBottom",_1: "20%"}
                                                      ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}
                                                      ,{ctor: "_Tuple2",_0: "color",_1: "#E9F1F7"}]));
   var backgroundStyle = function (hex) {
      return $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "backgroundColor",_1: hex}
                                            ,{ctor: "_Tuple2",_0: "min-height",_1: "100vh"}
                                            ,{ctor: "_Tuple2",_0: "background-position",_1: "center"}
                                            ,{ctor: "_Tuple2",_0: "background-size",_1: "cover"}
                                            ,{ctor: "_Tuple2",_0: "cursor",_1: "e-resize"}]));
   };
   var NextClick = {ctor: "NextClick"};
   var NoOp = {ctor: "NoOp"};
   var changeID = function (model) {    return _U.eq(model.nextID,2) ? 0 : model.nextID + 1;};
   var backgroundColors = $Array.fromList(_U.list(["#3772FF","#1B2021","#5FBB97"]));
   var corner = function (model) {
      var next = changeID(model) - 1;
      var nextHex = A2($Maybe.withDefault,"#99D5C9",A2($Array.get,next,backgroundColors));
      return $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: "0"}
                                            ,{ctor: "_Tuple2",_0: "height",_1: "0"}
                                            ,{ctor: "_Tuple2",_0: "border-style",_1: "solid"}
                                            ,{ctor: "_Tuple2",_0: "border-width",_1: "0 375px 375px 0"}
                                            ,{ctor: "_Tuple2"
                                             ,_0: "border-color"
                                             ,_1: A2($Basics._op["++"],"transparent ",A2($Basics._op["++"],nextHex," transparent transparent "))}
                                            ,{ctor: "_Tuple2",_0: "position",_1: "fixed"}
                                            ,{ctor: "_Tuple2",_0: "right",_1: "0%"}
                                            ,{ctor: "_Tuple2",_0: "top",_1: "0%"}]));
   };
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([backgroundStyle(model.backgroundColor),A2($Html$Events.onClick,address,NextClick)]),
      _U.list([A2($Html.div,
              _U.list([]),
              _U.list([A2($Html.div,
              _U.list([$Html$Attributes.$class("small-6 small-centered columns"),textContainer]),
              _U.list([A2($Html.div,
              _U.list([border]),
              _U.list([A2($Html.h1,_U.list([headlineStyle]),_U.list([$Html.text(model.headline)]))
                      ,findSep(model.headline)
                      ,A2($Html.div,
                      _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-family",_1: "Droid Sans Mono"}]))]),
                      _U.list([findContent(model)
                              ,A2($Html.br,_U.list([]),_U.list([]))
                              ,A2($Html.p,
                              _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "24px"}]))]),
                              _U.list([$Html.text(model.flavorText)]))]))]))]))]))
              ,A2($Html.span,_U.list([corner(model)]),_U.list([]))
              ,footer]));
   });
   var flavorTexts = $Array.fromList(_U.list(["","Currently enjoying Rails, Ruby, Elm, JS",""]));
   var contents = $Array.fromList(_U.list(["New York Based Web Developer"
                                          ,"https://github.com/jbern16, https://medium.com/@jBern16"
                                          ,"mailto:jbern16@gmail.com, https://twitter.com/jbern16, https://www.linkedin.com/in/jonathanbernesser, https://angel.co/jonathan-bernesser"]));
   var headlines = $Array.fromList(_U.list(["Jonathan Bernesser","My Work","Contact Me"]));
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "NoOp") {
            return model;
         } else {
            var backgroundColor = A2($Maybe.withDefault,"",A2($Array.get,model.nextID,backgroundColors));
            var flavorText = A2($Maybe.withDefault,"",A2($Array.get,model.nextID,flavorTexts));
            var content = A2($Maybe.withDefault,"",A2($Array.get,model.nextID,contents));
            var headline = A2($Maybe.withDefault,"",A2($Array.get,model.nextID,headlines));
            return _U.update(model,{headline: headline,content: content,flavorText: flavorText,backgroundColor: backgroundColor,nextID: changeID(model)});
         }
   });
   var init = {headline: "Jonathan Bernesser",content: "New York Based Web Developer",flavorText: "",backgroundColor: "#3772FF",nextID: 1};
   var main = $StartApp$Simple.start({model: init,update: update,view: view});
   var Model = F5(function (a,b,c,d,e) {    return {headline: a,content: b,flavorText: c,backgroundColor: d,nextID: e};});
   return _elm.Jbern16.values = {_op: _op
                                ,Model: Model
                                ,init: init
                                ,headlines: headlines
                                ,contents: contents
                                ,flavorTexts: flavorTexts
                                ,backgroundColors: backgroundColors
                                ,changeID: changeID
                                ,NoOp: NoOp
                                ,NextClick: NextClick
                                ,update: update
                                ,backgroundStyle: backgroundStyle
                                ,textContainer: textContainer
                                ,border: border
                                ,iconStyle: iconStyle
                                ,sepStyle: sepStyle
                                ,headlineStyle: headlineStyle
                                ,getLink: getLink
                                ,findContent: findContent
                                ,findSep: findSep
                                ,footer: footer
                                ,corner: corner
                                ,view: view
                                ,main: main};
};